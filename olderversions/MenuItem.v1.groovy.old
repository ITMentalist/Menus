

public class MenuItem
{
	int menuKey		// sequential numbering key
	int menuBIC		// builtin command number; zero if not builtin;	
	int menuColumn		// which column to show this item if menuShow=true
	int menuLine		// which line of the above column to show this item on
	def menuColor		// particular color specification; eventually will hold hex values like 0xc00080
	boolean menuShow	// true to show it
	String menuText		// the text of the menu item before the :=
	def menuCommand		// the full string after the :=
	String dialogTitle	// shows in title of dialog if BIC number says so
	String menuFileName	// when a BIC of 'go' says load and display another menu, this is the file name to load;
				// typically like ./data/menu.txt

	public MenuItem()
	{
		menuKey = key;
		menuText = text;
		menuCommand = command;

		menuBIC = 0;
		menuColumn = 0;
		menuLine = 0;
		menuColor = "green";
		menuShow = false;
		dialogTitle = "";
		menuFileName = "";
	} // end of constructor

	public MenuItem(int key, int bic, int col, int line, def color, boolean show, String text, def command, String title, String filename)
	{
		menuKey = key;
		menuBIC = bic;
		menuColumn = col;
		menuLine = line;
		menuColor = color;
		menuShow = show
		menuText = text;
		menuCommand = command;
		dialogTitle = title;
		menuFileName = filename;
	} // end of constructor

	// make some methods to put values into this MenuItem
	void putAt(int n, int c, int l){ if(menuKey == n) menuColumn = c; menuLine= l;  }
	void putAt(int n, String o){ if(menuKey == n) menuCommand= o;  }
	def getAt(int n){ if(menuKey == n) return menuCommand }

	String toString() {return "menuKey=$menuKey menuBIC=$menuBIC menuColumn=$menuColumn menuLine=$menuLine menuColor=<$menuColor> menuShow=<$menuShow> menuText=<$menuText> menuCommand=<$menuCommand> dialogTitle=<$dialogTitle> menuFileName=<$menuFileName>"}

	// print debug text (maybe)
	public static void say(def text) 
	{
		println "$text" 
	} // end of say

	// test harness for this class
	public static void main(String[] args)
	{	
		say "... started"

		// menu array
		def ma = []

		MenuItem mi = new MenuItem()
		mi[1] = 7
		assert mi[1]==7
		ma << mi
		mi[1] = "fred"
		assert mi[1]!="fred"	// fails on == 
		mi = new MenuItem(2,2,'C','Y',"Fred","echo 'fred was here'",1)
		println mi
		//assert mi=='echo 'fred was here' '    // can't get the syntax right for this, single,triple or double quotes won't work
		ma << mi
		say "\nma size is ${ma.size()} and has these menu items:"
		ma.each{ m -> println m;}
		say "== the end =="
	} // end of main

} // end of class
